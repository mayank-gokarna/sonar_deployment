<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.codehaus.sonar</groupId>
    <artifactId>sonar</artifactId>
    <version>4.2</version>
  </parent>
  <artifactId>sonar-server</artifactId>
  <packaging>war</packaging>
  <name>SonarQube :: Server</name>

  <dependencies>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-batch</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-batch-maven-compat</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-channel</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-colorizer</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-deprecated</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-home</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-java-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-markdown</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-update-center-common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-plugin-api</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <!-- not used at runtime -->
          <groupId>com.google.code.findbugs</groupId>
          <artifactId>jsr305</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.maven.shared</groupId>
          <artifactId>maven-dependency-tree</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.maven.shared</groupId>
          <artifactId>maven-common-artifact-filters</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-configuration</groupId>
      <artifactId>commons-configuration</artifactId>
    </dependency>
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-dbutils</groupId>
      <artifactId>commons-dbutils</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>
    <dependency>
      <groupId>org.picocontainer</groupId>
      <artifactId>picocontainer</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jruby</groupId>
      <artifactId>jruby-complete</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
    </dependency>
    <dependency>
      <groupId>jfree</groupId>
      <artifactId>jfreechart</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jruby.rack</groupId>
      <artifactId>jruby-rack</artifactId>
    </dependency>
    <dependency>
      <groupId>org.elasticsearch</groupId>
      <artifactId>elasticsearch</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-core</artifactId>
      <version>7.0.107</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <scope>provided</scope>
    </dependency>
    <!-- unit tests -->
    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-core</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.dbunit</groupId>
      <artifactId>dbunit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.sonar</groupId>
      <artifactId>sonar-testing-harness</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.tlrx</groupId>
      <artifactId>elasticsearch-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>


  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}/src/main/webapp/deploy</directory>
              <includes>
                <include>**/*</include>
              </includes>
              <excludes>
                <exclude>readme.txt</exclude>
              </excludes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.codehaus.sonar</groupId>
                  <artifactId>sonar-colorizer</artifactId>
                  <version>${project.version}</version>
                  <outputDirectory>${basedir}/src/main/webapp/stylesheets</outputDirectory>
                  <includes>**/sonar-colorizer.css</includes>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/${project.build.finalName}/</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/src/main/webapp</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>ro.isdc.wro4j</groupId>
        <artifactId>wro4j-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <targetGroups>sonar</targetGroups>
          <minimize>true</minimize>
          <cssDestinationFolder>${project.build.directory}/${project.build.finalName}/stylesheets</cssDestinationFolder>
          <jsDestinationFolder>${project.build.directory}/${project.build.finalName}/javascripts</jsDestinationFolder>
          <contextFolder>${basedir}/src/main/webapp/</contextFolder>
          <wroFile>${basedir}/wro.xml</wroFile>
          <wroManagerFactory>ro.isdc.wro.extensions.manager.standalone.GoogleStandaloneManagerFactory</wroManagerFactory>
          <ignoreMissingResources>false</ignoreMissingResources>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.sonar</groupId>
        <artifactId>sonar-dev-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>trim</id>
            <phase>process-resources</phase>
            <goals>
              <goal>trim</goal>
            </goals>
            <configuration>
              <directory>${project.build.directory}/${project.build.finalName}</directory>
              <includes>
                <include>**/*.erb</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <packagingExcludes>
            **/*.log,*.iml,WEB-INF/script/,WEB-INF/test/,javascripts/*-min.js,stylesheets/*-min.css
          </packagingExcludes>
          <warSourceExcludes>
            **/*
          </warSourceExcludes>
          <archive>
            <manifestEntries>
              <Version>${project.version}</Version>
              <!-- ${buildNumber} is the Git revision. It's generated by the buildnumber-maven-plugin -->
              <Implementation-Build>${buildNumber}</Implementation-Build>
              <Build-Time>${timestamp}</Build-Time>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>start-dev-server</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-plugins</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <overWriteIfNewer>false</overWriteIfNewer>
                  <overWriteReleases>false</overWriteReleases>
                  <overWriteSnapshots>false</overWriteSnapshots>
                  <includeTypes>sonar-plugin</includeTypes>
                  <outputDirectory>${project.build.directory}/dev/lib/core-plugins</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-conf</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy-resources</goal>
                </goals>
                <configuration>
                  <outputDirectory>${project.build.directory}/dev/conf</outputDirectory>
                  <overwrite>false</overwrite>
                  <resources>
                    <resource>
                      <directory>src/dev</directory>
                      <includes>
                        <include>sonar.properties</include>
                      </includes>
                      <filtering>false</filtering>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
            <version>2.1</version>
            <configuration>
              <port>9000</port>
              <path>/dev</path>
              <contextFile>${project.basedir}/src/main/webapp/META-INF/context.xml</contextFile>
              <useNaming>false</useNaming>
              <systemProperties>
                <SONAR_HOME>${project.build.directory}/dev</SONAR_HOME>
                <rails.env>development</rails.env>
                <jruby.max.runtimes>3</jruby.max.runtimes>
                <sonar.jdbc.url>${sonar.jdbc.url}</sonar.jdbc.url>
                <sonar.runtime.mode>development</sonar.runtime.mode>
                <sonar.es.http.host>127.0.0.1</sonar.es.http.host>
                <sonar.es.http.port>9200</sonar.es.http.port>
                <sonar.log.console>true</sonar.log.console>
                <sonar.log.profilingLevel>FULL</sonar.log.profilingLevel>
              </systemProperties>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <!-- core plugins -->
        <dependency>
          <groupId>org.codehaus.sonar.plugins</groupId>
          <artifactId>sonar-core-plugin</artifactId>
          <version>${project.version}</version>
          <type>sonar-plugin</type>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.codehaus.sonar.plugins</groupId>
          <artifactId>sonar-design-plugin</artifactId>
          <version>${project.version}</version>
          <type>sonar-plugin</type>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.codehaus.sonar-plugins.java</groupId>
          <artifactId>sonar-findbugs-plugin</artifactId>
          <version>${sonarJava.version}</version>
          <type>sonar-plugin</type>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.codehaus.sonar-plugins.java</groupId>
          <artifactId>sonar-checkstyle-plugin</artifactId>
          <version>${sonarJava.version}</version>
          <type>sonar-plugin</type>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.codehaus.sonar.plugins</groupId>
          <artifactId>sonar-dbcleaner-plugin</artifactId>
          <version>${project.version}</version>
          <type>sonar-plugin</type>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.codehaus.sonar-plugins.java</groupId>
          <artifactId>sonar-pmd-plugin</artifactId>
          <version>${sonarJava.version}</version>
          <type>sonar-plugin</type>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.codehaus.sonar-plugins.java</groupId>
          <artifactId>sonar-squid-java-plugin</artifactId>
          <version>${sonarJava.version}</version>
          <type>sonar-plugin</type>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.codehaus.sonar-plugins.java</groupId>
          <artifactId>sonar-surefire-plugin</artifactId>
          <version>${sonarJava.version}</version>
          <type>sonar-plugin</type>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.codehaus.sonar.plugins</groupId>
          <artifactId>sonar-cpd-plugin</artifactId>
          <version>${project.version}</version>
          <type>sonar-plugin</type>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.codehaus.sonar.plugins</groupId>
          <artifactId>sonar-l10n-en-plugin</artifactId>
          <version>${project.version}</version>
          <type>sonar-plugin</type>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.codehaus.sonar.plugins</groupId>
          <artifactId>sonar-email-notifications-plugin</artifactId>
          <version>${project.version}</version>
          <type>sonar-plugin</type>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.codehaus.sonar.plugins</groupId>
          <artifactId>sonar-maven-batch-plugin</artifactId>
          <version>${project.version}</version>
          <type>sonar-plugin</type>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.codehaus.sonar-plugins.java</groupId>
          <artifactId>sonar-jacoco-plugin</artifactId>
          <version>${sonarJava.version}</version>
          <type>sonar-plugin</type>
          <scope>provided</scope>
        </dependency>
        <dependency>
          <groupId>org.codehaus.sonar-plugins.java</groupId>
          <artifactId>sonar-java-plugin</artifactId>
          <version>${sonarJava.version}</version>
          <type>sonar-plugin</type>
          <scope>provided</scope>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>postgresql</id>
      <properties>
        <sonar.jdbc.url>jdbc:postgresql://localhost:15432/sonar</sonar.jdbc.url>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-jdbc-driver</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <overWriteIfNewer>false</overWriteIfNewer>
                  <overWriteReleases>false</overWriteReleases>
                  <overWriteSnapshots>false</overWriteSnapshots>
                  <includeArtifactIds>postgresql</includeArtifactIds>
                  <outputDirectory>${project.build.directory}/dev/extensions/jdbc-driver/postgresql</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>postgresql</groupId>
          <artifactId>postgresql</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>mysql</id>
      <properties>
        <sonar.jdbc.url>jdbc:mysql://localhost:13306/sonar?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;rewriteBatchedStatements=true</sonar.jdbc.url>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-jdbc-driver</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <overWriteIfNewer>false</overWriteIfNewer>
                  <overWriteReleases>false</overWriteReleases>
                  <overWriteSnapshots>false</overWriteSnapshots>
                  <includeArtifactIds>mysql-connector-java</includeArtifactIds>
                  <outputDirectory>${project.build.directory}/dev/extensions/jdbc-driver/mysql</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>h2</id>
      <properties>
        <sonar.jdbc.url>jdbc:h2:tcp://localhost:9092/sonar</sonar.jdbc.url>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-jdbc-driver</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <overWriteIfNewer>false</overWriteIfNewer>
                  <overWriteReleases>false</overWriteReleases>
                  <overWriteSnapshots>false</overWriteSnapshots>
                  <includeArtifactIds>h2</includeArtifactIds>
                  <outputDirectory>${project.build.directory}/dev/extensions/jdbc-driver/h2</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>com.h2database</groupId>
          <artifactId>h2</artifactId>
        </dependency>
      </dependencies>
    </profile>

    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-deploy-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <!-- experimental profile -->
      <id>js</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.kelveden</groupId>
            <artifactId>maven-karma-plugin</artifactId>
            <version>1.5</version>
            <configuration>
              <configFile>${basedir}/karma.conf.js</configFile>
            </configuration>
            <executions>
              <execution>
                <id>karma</id>
                <goals>
                  <goal>start</goal>
                </goals>
                <phase>process-test-classes</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
